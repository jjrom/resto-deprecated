;;;;;;;;;;;;;;;;;;;;;;;
; General configuration
;;;;;;;;;;;;;;;;;;;;;;;

[general]

; RESTo base Url
restoUrl = //localhost/resto

; Home page title and description
title = <b>RESTo</b>
description = <b>RESTo</b> - <b>RE</b>stful <b>S</b>emantic search <b>T</b>ool for ge<b>O</b>spatial<br/>RESTo implements search service with semantic query analyzis on Earth Observation metadata database. It conforms to OGC 13-026 standard - OpenSearch Extension for Earth Observation.

; RESTo supported languages
; All supported languages should be associated to the corresponding dictionary
; file under resto/dictionaries 
acceptedLangs[] = en
acceptedLangs[] = fr
acceptedLangs[] = it
acceptedLangs[] = de

; Default theme directory name for HTML display
; Theme directory should be located under $RESTO_BUILD/themes
theme = default

; Timezone
timezone = Europe/Paris

; If set to false, user can register without validating their email
; through activation code. Only set to false if you cannot set up an email
; service on your server
useActivationCode = true

; Activation email
; This is the email adress displayed when activation code is sent to user
; If not set, it will be automatically built as 'restobot@hostname'
; activationEmail = restobot@localhost

; If set to true, each query include returns a real count
; of the total number of resources relative to the query
; Otherwise, the total count is not known
; Set to 'false' to have better performance with large collections
realCount = false

; Database configuration
; This should not be modified if you follow the installation process
;db.dbname = resto
;db.host = localhost
;db.port = 5432

; Pagination
; Default number of search results returned by page if not specified in the request
;db.resultsPerPage = 50

; Pagination
; Maximum number of results returned by page whatever is specified in the request
;db.maximumResultsPerPage = 500

; Resto database user with READ only privileges (see http://github.com/jjrom/resto/README.md)
;db.user = resto
db.password = resto

; Resto database user with READ+WRITE privileges (see http://github.com/jjrom/resto/README.md)
;db.suser = sresto
db.spassword = sresto

[sso]

; Google authentication server
google.host = accounts.google.com
google.clientId = XXXXXX
google.clientSecret = XXXX
google.authorizeUrl = https://accounts.google.com/o/oauth2/auth?response_type=code&scope=openid%20email%20profile&state=todo
google.accessTokenUrl = https://accounts.google.com/o/oauth2/token
google.userInfoUrl = https://www.googleapis.com/plus/v1/people/me/openIdConnect
google.uidKey = email
google.useBearer = false

;;;;;;;;;;;;;;;;;;;;;;;
; Modules configuration
;;;;;;;;;;;;;;;;;;;;;;;
[modules]

; Gazetteer module - enable location based search
Gazetteer.activate = true
Gazetteer.db.schema = gazetteer

; Wikipedia module - enable location based wikipedia entries display
Wikipedia.activate = true
Wikipedia.db.schema = gazetteer

; QueryStorage module - enable storing of all search queries within admin.history table
QueryStorage.activate = true

; CollectionManager - enable Creation/Update/Deletion of collection
CollectionManager.activate = true
; Set secure to true to force the use of HTTPS for POST, DELETE and PUT
CollectionManager.secure = false

; ResourceManager - enable Creation/Update/Deletion of resource
ResourceManager.activate = true
; Set secure to true to force the use of HTTPS for POST, DELETE and PUT
ResourceManager.secure = false
; iTag url to enable automatic tagging of resource during ingestion process
ResourceManager.iTag = http://localhost/devel/itag/?continents=true&countries=true&landcover=true&regions=true

; ResourceTagger - enable tagging of resource
ResourceTagger.activate = true
; Set secure to true to force the use of HTTPS for POST, DELETE and PUT
ResourceTagger.secure = false

; RightsManager - enable rights management
RightsManager.activate = true
; Set secure to true to force the use of HTTPS for POST, DELETE and PUT
RightsManager.secure = false
